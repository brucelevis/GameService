// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: P_Property.proto

#ifndef PROTOBUF_P_5fProperty_2eproto__INCLUDED
#define PROTOBUF_P_5fProperty_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "P_Asset.pb.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

namespace Adoter {
namespace Asset {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_P_5fProperty_2eproto();
void protobuf_AssignDesc_P_5fProperty_2eproto();
void protobuf_ShutdownFile_P_5fProperty_2eproto();

class FiledCheck;
class Bar;
class MyMessage;
class Player;
class Inventories;
class Inventories_Inventory;
class ItemEquipment;

// ===================================================================

class FiledCheck : public ::google::protobuf::Message {
 public:
  FiledCheck();
  virtual ~FiledCheck();

  FiledCheck(const FiledCheck& from);

  inline FiledCheck& operator=(const FiledCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FiledCheck& default_instance();

  void Swap(FiledCheck* other);

  // implements Message ----------------------------------------------

  FiledCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FiledCheck& from);
  void MergeFrom(const FiledCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 minv = 1;
  inline bool has_minv() const;
  inline void clear_minv();
  static const int kMinvFieldNumber = 1;
  inline ::google::protobuf::int64 minv() const;
  inline void set_minv(::google::protobuf::int64 value);

  // optional int64 maxv = 2;
  inline bool has_maxv() const;
  inline void clear_maxv();
  static const int kMaxvFieldNumber = 2;
  inline ::google::protobuf::int64 maxv() const;
  inline void set_maxv(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Adoter.Asset.FiledCheck)
 private:
  inline void set_has_minv();
  inline void clear_has_minv();
  inline void set_has_maxv();
  inline void clear_has_maxv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 minv_;
  ::google::protobuf::int64 maxv_;
  friend void  protobuf_AddDesc_P_5fProperty_2eproto();
  friend void protobuf_AssignDesc_P_5fProperty_2eproto();
  friend void protobuf_ShutdownFile_P_5fProperty_2eproto();

  void InitAsDefaultInstance();
  static FiledCheck* default_instance_;
};
// -------------------------------------------------------------------

class Bar : public ::google::protobuf::Message {
 public:
  Bar();
  virtual ~Bar();

  Bar(const Bar& from);

  inline Bar& operator=(const Bar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bar& default_instance();

  void Swap(Bar* other);

  // implements Message ----------------------------------------------

  Bar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bar& from);
  void MergeFrom(const Bar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rate = 1;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 1;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Adoter.Asset.Bar)
 private:
  inline void set_has_rate();
  inline void clear_has_rate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rate_;
  friend void  protobuf_AddDesc_P_5fProperty_2eproto();
  friend void protobuf_AssignDesc_P_5fProperty_2eproto();
  friend void protobuf_ShutdownFile_P_5fProperty_2eproto();

  void InitAsDefaultInstance();
  static Bar* default_instance_;
};
// -------------------------------------------------------------------

class MyMessage : public ::google::protobuf::Message {
 public:
  MyMessage();
  virtual ~MyMessage();

  MyMessage(const MyMessage& from);

  inline MyMessage& operator=(const MyMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyMessage& default_instance();

  void Swap(MyMessage* other);

  // implements Message ----------------------------------------------

  MyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyMessage& from);
  void MergeFrom(const MyMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Adoter.Asset.MyMessage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_P_5fProperty_2eproto();
  friend void protobuf_AssignDesc_P_5fProperty_2eproto();
  friend void protobuf_ShutdownFile_P_5fProperty_2eproto();

  void InitAsDefaultInstance();
  static MyMessage* default_instance_;
};
// -------------------------------------------------------------------

class Player : public ::google::protobuf::Message {
 public:
  Player();
  virtual ~Player();

  Player(const Player& from);

  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player& default_instance();

  void Swap(Player* other);

  // implements Message ----------------------------------------------

  Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player& from);
  void MergeFrom(const Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Adoter.Asset.ENTITY_TYPE entity_type = 1 [default = ENTITY_TYPE_PLAYER];
  inline bool has_entity_type() const;
  inline void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  inline ::Adoter::Asset::ENTITY_TYPE entity_type() const;
  inline void set_entity_type(::Adoter::Asset::ENTITY_TYPE value);

  // optional bytes common_prop = 2;
  inline bool has_common_prop() const;
  inline void clear_common_prop();
  static const int kCommonPropFieldNumber = 2;
  inline const ::std::string& common_prop() const;
  inline void set_common_prop(const ::std::string& value);
  inline void set_common_prop(const char* value);
  inline void set_common_prop(const void* value, size_t size);
  inline ::std::string* mutable_common_prop();
  inline ::std::string* release_common_prop();
  inline void set_allocated_common_prop(::std::string* common_prop);

  // optional int32 local_zone = 3;
  inline bool has_local_zone() const;
  inline void clear_local_zone();
  static const int kLocalZoneFieldNumber = 3;
  inline ::google::protobuf::int32 local_zone() const;
  inline void set_local_zone(::google::protobuf::int32 value);

  // optional int32 locate_zone = 4;
  inline bool has_locate_zone() const;
  inline void clear_locate_zone();
  static const int kLocateZoneFieldNumber = 4;
  inline ::google::protobuf::int32 locate_zone() const;
  inline void set_locate_zone(::google::protobuf::int32 value);

  // optional .Adoter.Asset.Inventories inventory = 5;
  inline bool has_inventory() const;
  inline void clear_inventory();
  static const int kInventoryFieldNumber = 5;
  inline const ::Adoter::Asset::Inventories& inventory() const;
  inline ::Adoter::Asset::Inventories* mutable_inventory();
  inline ::Adoter::Asset::Inventories* release_inventory();
  inline void set_allocated_inventory(::Adoter::Asset::Inventories* inventory);

  // @@protoc_insertion_point(class_scope:Adoter.Asset.Player)
 private:
  inline void set_has_entity_type();
  inline void clear_has_entity_type();
  inline void set_has_common_prop();
  inline void clear_has_common_prop();
  inline void set_has_local_zone();
  inline void clear_has_local_zone();
  inline void set_has_locate_zone();
  inline void clear_has_locate_zone();
  inline void set_has_inventory();
  inline void clear_has_inventory();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* common_prop_;
  int entity_type_;
  ::google::protobuf::int32 local_zone_;
  ::Adoter::Asset::Inventories* inventory_;
  ::google::protobuf::int32 locate_zone_;
  friend void  protobuf_AddDesc_P_5fProperty_2eproto();
  friend void protobuf_AssignDesc_P_5fProperty_2eproto();
  friend void protobuf_ShutdownFile_P_5fProperty_2eproto();

  void InitAsDefaultInstance();
  static Player* default_instance_;
};
// -------------------------------------------------------------------

class Inventories_Inventory : public ::google::protobuf::Message {
 public:
  Inventories_Inventory();
  virtual ~Inventories_Inventory();

  Inventories_Inventory(const Inventories_Inventory& from);

  inline Inventories_Inventory& operator=(const Inventories_Inventory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inventories_Inventory& default_instance();

  void Swap(Inventories_Inventory* other);

  // implements Message ----------------------------------------------

  Inventories_Inventory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inventories_Inventory& from);
  void MergeFrom(const Inventories_Inventory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Adoter.Asset.INVENTORY_TYPE inventory_type = 1;
  inline bool has_inventory_type() const;
  inline void clear_inventory_type();
  static const int kInventoryTypeFieldNumber = 1;
  inline ::Adoter::Asset::INVENTORY_TYPE inventory_type() const;
  inline void set_inventory_type(::Adoter::Asset::INVENTORY_TYPE value);

  // repeated .Adoter.Asset.Item_Item items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::Adoter::Asset::Item_Item& items(int index) const;
  inline ::Adoter::Asset::Item_Item* mutable_items(int index);
  inline ::Adoter::Asset::Item_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Item_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Item_Item >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Adoter.Asset.Inventories.Inventory)
 private:
  inline void set_has_inventory_type();
  inline void clear_has_inventory_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Item_Item > items_;
  int inventory_type_;
  friend void  protobuf_AddDesc_P_5fProperty_2eproto();
  friend void protobuf_AssignDesc_P_5fProperty_2eproto();
  friend void protobuf_ShutdownFile_P_5fProperty_2eproto();

  void InitAsDefaultInstance();
  static Inventories_Inventory* default_instance_;
};
// -------------------------------------------------------------------

class Inventories : public ::google::protobuf::Message {
 public:
  Inventories();
  virtual ~Inventories();

  Inventories(const Inventories& from);

  inline Inventories& operator=(const Inventories& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inventories& default_instance();

  void Swap(Inventories* other);

  // implements Message ----------------------------------------------

  Inventories* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inventories& from);
  void MergeFrom(const Inventories& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Inventories_Inventory Inventory;

  // accessors -------------------------------------------------------

  // repeated .Adoter.Asset.Inventories.Inventory inventories = 1;
  inline int inventories_size() const;
  inline void clear_inventories();
  static const int kInventoriesFieldNumber = 1;
  inline const ::Adoter::Asset::Inventories_Inventory& inventories(int index) const;
  inline ::Adoter::Asset::Inventories_Inventory* mutable_inventories(int index);
  inline ::Adoter::Asset::Inventories_Inventory* add_inventories();
  inline const ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Inventories_Inventory >&
      inventories() const;
  inline ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Inventories_Inventory >*
      mutable_inventories();

  // @@protoc_insertion_point(class_scope:Adoter.Asset.Inventories)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Inventories_Inventory > inventories_;
  friend void  protobuf_AddDesc_P_5fProperty_2eproto();
  friend void protobuf_AssignDesc_P_5fProperty_2eproto();
  friend void protobuf_ShutdownFile_P_5fProperty_2eproto();

  void InitAsDefaultInstance();
  static Inventories* default_instance_;
};
// -------------------------------------------------------------------

class ItemEquipment : public ::google::protobuf::Message {
 public:
  ItemEquipment();
  virtual ~ItemEquipment();

  ItemEquipment(const ItemEquipment& from);

  inline ItemEquipment& operator=(const ItemEquipment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemEquipment& default_instance();

  void Swap(ItemEquipment* other);

  // implements Message ----------------------------------------------

  ItemEquipment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemEquipment& from);
  void MergeFrom(const ItemEquipment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 star = 1;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 1;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Adoter.Asset.ItemEquipment)
 private:
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 star_;
  friend void  protobuf_AddDesc_P_5fProperty_2eproto();
  friend void protobuf_AssignDesc_P_5fProperty_2eproto();
  friend void protobuf_ShutdownFile_P_5fProperty_2eproto();

  void InitAsDefaultInstance();
  static ItemEquipment* default_instance_;
};
// ===================================================================

static const int kCommentFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  comment;
static const int kCheckerFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::Adoter::Asset::FiledCheck >, 11, false >
  checker;
static const int kMyOptionFieldNumber = 51234;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  my_option;

// ===================================================================

// FiledCheck

// optional int64 minv = 1;
inline bool FiledCheck::has_minv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FiledCheck::set_has_minv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FiledCheck::clear_has_minv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FiledCheck::clear_minv() {
  minv_ = GOOGLE_LONGLONG(0);
  clear_has_minv();
}
inline ::google::protobuf::int64 FiledCheck::minv() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.FiledCheck.minv)
  return minv_;
}
inline void FiledCheck::set_minv(::google::protobuf::int64 value) {
  set_has_minv();
  minv_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.FiledCheck.minv)
}

// optional int64 maxv = 2;
inline bool FiledCheck::has_maxv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FiledCheck::set_has_maxv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FiledCheck::clear_has_maxv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FiledCheck::clear_maxv() {
  maxv_ = GOOGLE_LONGLONG(0);
  clear_has_maxv();
}
inline ::google::protobuf::int64 FiledCheck::maxv() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.FiledCheck.maxv)
  return maxv_;
}
inline void FiledCheck::set_maxv(::google::protobuf::int64 value) {
  set_has_maxv();
  maxv_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.FiledCheck.maxv)
}

// -------------------------------------------------------------------

// Bar

// optional int32 rate = 1;
inline bool Bar::has_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Bar::set_has_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Bar::clear_has_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Bar::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 Bar::rate() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Bar.rate)
  return rate_;
}
inline void Bar::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.Bar.rate)
}

// -------------------------------------------------------------------

// MyMessage

// -------------------------------------------------------------------

// Player

// optional .Adoter.Asset.ENTITY_TYPE entity_type = 1 [default = ENTITY_TYPE_PLAYER];
inline bool Player::has_entity_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player::set_has_entity_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player::clear_has_entity_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player::clear_entity_type() {
  entity_type_ = 2;
  clear_has_entity_type();
}
inline ::Adoter::Asset::ENTITY_TYPE Player::entity_type() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Player.entity_type)
  return static_cast< ::Adoter::Asset::ENTITY_TYPE >(entity_type_);
}
inline void Player::set_entity_type(::Adoter::Asset::ENTITY_TYPE value) {
  assert(::Adoter::Asset::ENTITY_TYPE_IsValid(value));
  set_has_entity_type();
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.Player.entity_type)
}

// optional bytes common_prop = 2;
inline bool Player::has_common_prop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player::set_has_common_prop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player::clear_has_common_prop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player::clear_common_prop() {
  if (common_prop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_prop_->clear();
  }
  clear_has_common_prop();
}
inline const ::std::string& Player::common_prop() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Player.common_prop)
  return *common_prop_;
}
inline void Player::set_common_prop(const ::std::string& value) {
  set_has_common_prop();
  if (common_prop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_prop_ = new ::std::string;
  }
  common_prop_->assign(value);
  // @@protoc_insertion_point(field_set:Adoter.Asset.Player.common_prop)
}
inline void Player::set_common_prop(const char* value) {
  set_has_common_prop();
  if (common_prop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_prop_ = new ::std::string;
  }
  common_prop_->assign(value);
  // @@protoc_insertion_point(field_set_char:Adoter.Asset.Player.common_prop)
}
inline void Player::set_common_prop(const void* value, size_t size) {
  set_has_common_prop();
  if (common_prop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_prop_ = new ::std::string;
  }
  common_prop_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Adoter.Asset.Player.common_prop)
}
inline ::std::string* Player::mutable_common_prop() {
  set_has_common_prop();
  if (common_prop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    common_prop_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.Player.common_prop)
  return common_prop_;
}
inline ::std::string* Player::release_common_prop() {
  clear_has_common_prop();
  if (common_prop_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = common_prop_;
    common_prop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_common_prop(::std::string* common_prop) {
  if (common_prop_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete common_prop_;
  }
  if (common_prop) {
    set_has_common_prop();
    common_prop_ = common_prop;
  } else {
    clear_has_common_prop();
    common_prop_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Adoter.Asset.Player.common_prop)
}

// optional int32 local_zone = 3;
inline bool Player::has_local_zone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Player::set_has_local_zone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Player::clear_has_local_zone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Player::clear_local_zone() {
  local_zone_ = 0;
  clear_has_local_zone();
}
inline ::google::protobuf::int32 Player::local_zone() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Player.local_zone)
  return local_zone_;
}
inline void Player::set_local_zone(::google::protobuf::int32 value) {
  set_has_local_zone();
  local_zone_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.Player.local_zone)
}

// optional int32 locate_zone = 4;
inline bool Player::has_locate_zone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Player::set_has_locate_zone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Player::clear_has_locate_zone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Player::clear_locate_zone() {
  locate_zone_ = 0;
  clear_has_locate_zone();
}
inline ::google::protobuf::int32 Player::locate_zone() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Player.locate_zone)
  return locate_zone_;
}
inline void Player::set_locate_zone(::google::protobuf::int32 value) {
  set_has_locate_zone();
  locate_zone_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.Player.locate_zone)
}

// optional .Adoter.Asset.Inventories inventory = 5;
inline bool Player::has_inventory() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Player::set_has_inventory() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Player::clear_has_inventory() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Player::clear_inventory() {
  if (inventory_ != NULL) inventory_->::Adoter::Asset::Inventories::Clear();
  clear_has_inventory();
}
inline const ::Adoter::Asset::Inventories& Player::inventory() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Player.inventory)
  return inventory_ != NULL ? *inventory_ : *default_instance_->inventory_;
}
inline ::Adoter::Asset::Inventories* Player::mutable_inventory() {
  set_has_inventory();
  if (inventory_ == NULL) inventory_ = new ::Adoter::Asset::Inventories;
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.Player.inventory)
  return inventory_;
}
inline ::Adoter::Asset::Inventories* Player::release_inventory() {
  clear_has_inventory();
  ::Adoter::Asset::Inventories* temp = inventory_;
  inventory_ = NULL;
  return temp;
}
inline void Player::set_allocated_inventory(::Adoter::Asset::Inventories* inventory) {
  delete inventory_;
  inventory_ = inventory;
  if (inventory) {
    set_has_inventory();
  } else {
    clear_has_inventory();
  }
  // @@protoc_insertion_point(field_set_allocated:Adoter.Asset.Player.inventory)
}

// -------------------------------------------------------------------

// Inventories_Inventory

// optional .Adoter.Asset.INVENTORY_TYPE inventory_type = 1;
inline bool Inventories_Inventory::has_inventory_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Inventories_Inventory::set_has_inventory_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Inventories_Inventory::clear_has_inventory_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Inventories_Inventory::clear_inventory_type() {
  inventory_type_ = 1;
  clear_has_inventory_type();
}
inline ::Adoter::Asset::INVENTORY_TYPE Inventories_Inventory::inventory_type() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Inventories.Inventory.inventory_type)
  return static_cast< ::Adoter::Asset::INVENTORY_TYPE >(inventory_type_);
}
inline void Inventories_Inventory::set_inventory_type(::Adoter::Asset::INVENTORY_TYPE value) {
  assert(::Adoter::Asset::INVENTORY_TYPE_IsValid(value));
  set_has_inventory_type();
  inventory_type_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.Inventories.Inventory.inventory_type)
}

// repeated .Adoter.Asset.Item_Item items = 2;
inline int Inventories_Inventory::items_size() const {
  return items_.size();
}
inline void Inventories_Inventory::clear_items() {
  items_.Clear();
}
inline const ::Adoter::Asset::Item_Item& Inventories_Inventory::items(int index) const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Inventories.Inventory.items)
  return items_.Get(index);
}
inline ::Adoter::Asset::Item_Item* Inventories_Inventory::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.Inventories.Inventory.items)
  return items_.Mutable(index);
}
inline ::Adoter::Asset::Item_Item* Inventories_Inventory::add_items() {
  // @@protoc_insertion_point(field_add:Adoter.Asset.Inventories.Inventory.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Item_Item >&
Inventories_Inventory::items() const {
  // @@protoc_insertion_point(field_list:Adoter.Asset.Inventories.Inventory.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Item_Item >*
Inventories_Inventory::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Adoter.Asset.Inventories.Inventory.items)
  return &items_;
}

// -------------------------------------------------------------------

// Inventories

// repeated .Adoter.Asset.Inventories.Inventory inventories = 1;
inline int Inventories::inventories_size() const {
  return inventories_.size();
}
inline void Inventories::clear_inventories() {
  inventories_.Clear();
}
inline const ::Adoter::Asset::Inventories_Inventory& Inventories::inventories(int index) const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.Inventories.inventories)
  return inventories_.Get(index);
}
inline ::Adoter::Asset::Inventories_Inventory* Inventories::mutable_inventories(int index) {
  // @@protoc_insertion_point(field_mutable:Adoter.Asset.Inventories.inventories)
  return inventories_.Mutable(index);
}
inline ::Adoter::Asset::Inventories_Inventory* Inventories::add_inventories() {
  // @@protoc_insertion_point(field_add:Adoter.Asset.Inventories.inventories)
  return inventories_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Inventories_Inventory >&
Inventories::inventories() const {
  // @@protoc_insertion_point(field_list:Adoter.Asset.Inventories.inventories)
  return inventories_;
}
inline ::google::protobuf::RepeatedPtrField< ::Adoter::Asset::Inventories_Inventory >*
Inventories::mutable_inventories() {
  // @@protoc_insertion_point(field_mutable_list:Adoter.Asset.Inventories.inventories)
  return &inventories_;
}

// -------------------------------------------------------------------

// ItemEquipment

// optional int32 star = 1;
inline bool ItemEquipment::has_star() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemEquipment::set_has_star() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemEquipment::clear_has_star() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemEquipment::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 ItemEquipment::star() const {
  // @@protoc_insertion_point(field_get:Adoter.Asset.ItemEquipment.star)
  return star_;
}
inline void ItemEquipment::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:Adoter.Asset.ItemEquipment.star)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Asset
}  // namespace Adoter

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_P_5fProperty_2eproto__INCLUDED
