// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Server.proto

#ifndef PROTOBUF_Server_2eproto__INCLUDED
#define PROTOBUF_Server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace real {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Server_2eproto();
void protobuf_AssignDesc_Server_2eproto();
void protobuf_ShutdownFile_Server_2eproto();

class MsgItem;
class MsgItems;

enum MsgType {
  MSG_TYPE_BEGIN = 1,
  MSG_TYPE_AOI_ENTER = 2,
  MSG_TYPE_AOI_LEAVE = 3,
  MSG_TYPE_AOI_MOVE = 4
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = MSG_TYPE_BEGIN;
const MsgType MsgType_MAX = MSG_TYPE_AOI_MOVE;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class MsgItem : public ::google::protobuf::Message {
 public:
  MsgItem();
  virtual ~MsgItem();

  MsgItem(const MsgItem& from);

  inline MsgItem& operator=(const MsgItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgItem& default_instance();

  void Swap(MsgItem* other);

  // implements Message ----------------------------------------------

  MsgItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgItem& from);
  void MergeFrom(const MsgItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 message_id = 1;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  inline ::google::protobuf::int64 message_id() const;
  inline void set_message_id(::google::protobuf::int64 value);

  // optional .real.MsgType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::real::MsgType type() const;
  inline void set_type(::real::MsgType value);

  // optional int32 priority = 3 [default = 10];
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 3;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);

  // optional int64 sender = 4;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 4;
  inline ::google::protobuf::int64 sender() const;
  inline void set_sender(::google::protobuf::int64 value);

  // optional int64 receiver = 5;
  inline bool has_receiver() const;
  inline void clear_receiver();
  static const int kReceiverFieldNumber = 5;
  inline ::google::protobuf::int64 receiver() const;
  inline void set_receiver(::google::protobuf::int64 value);

  // optional int64 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional int32 delay = 7;
  inline bool has_delay() const;
  inline void clear_delay();
  static const int kDelayFieldNumber = 7;
  inline ::google::protobuf::int32 delay() const;
  inline void set_delay(::google::protobuf::int32 value);

  // optional bytes content = 8;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 8;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:real.MsgItem)
 private:
  inline void set_has_message_id();
  inline void clear_has_message_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_receiver();
  inline void clear_has_receiver();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_delay();
  inline void clear_has_delay();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 message_id_;
  int type_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::int64 sender_;
  ::google::protobuf::int64 receiver_;
  ::google::protobuf::int64 time_;
  ::std::string* content_;
  ::google::protobuf::int32 delay_;
  friend void  protobuf_AddDesc_Server_2eproto();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
  static MsgItem* default_instance_;
};
// -------------------------------------------------------------------

class MsgItems : public ::google::protobuf::Message {
 public:
  MsgItems();
  virtual ~MsgItems();

  MsgItems(const MsgItems& from);

  inline MsgItems& operator=(const MsgItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgItems& default_instance();

  void Swap(MsgItems* other);

  // implements Message ----------------------------------------------

  MsgItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgItems& from);
  void MergeFrom(const MsgItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .real.MsgItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::real::MsgItem& items(int index) const;
  inline ::real::MsgItem* mutable_items(int index);
  inline ::real::MsgItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::real::MsgItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::real::MsgItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:real.MsgItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::real::MsgItem > items_;
  friend void  protobuf_AddDesc_Server_2eproto();
  friend void protobuf_AssignDesc_Server_2eproto();
  friend void protobuf_ShutdownFile_Server_2eproto();

  void InitAsDefaultInstance();
  static MsgItems* default_instance_;
};
// ===================================================================


// ===================================================================

// MsgItem

// optional int64 message_id = 1;
inline bool MsgItem::has_message_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgItem::set_has_message_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgItem::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgItem::clear_message_id() {
  message_id_ = GOOGLE_LONGLONG(0);
  clear_has_message_id();
}
inline ::google::protobuf::int64 MsgItem::message_id() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.message_id)
  return message_id_;
}
inline void MsgItem::set_message_id(::google::protobuf::int64 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:real.MsgItem.message_id)
}

// optional .real.MsgType type = 2;
inline bool MsgItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgItem::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::real::MsgType MsgItem::type() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.type)
  return static_cast< ::real::MsgType >(type_);
}
inline void MsgItem::set_type(::real::MsgType value) {
  assert(::real::MsgType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:real.MsgItem.type)
}

// optional int32 priority = 3 [default = 10];
inline bool MsgItem::has_priority() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgItem::set_has_priority() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgItem::clear_has_priority() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgItem::clear_priority() {
  priority_ = 10;
  clear_has_priority();
}
inline ::google::protobuf::int32 MsgItem::priority() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.priority)
  return priority_;
}
inline void MsgItem::set_priority(::google::protobuf::int32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:real.MsgItem.priority)
}

// optional int64 sender = 4;
inline bool MsgItem::has_sender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgItem::set_has_sender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgItem::clear_has_sender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgItem::clear_sender() {
  sender_ = GOOGLE_LONGLONG(0);
  clear_has_sender();
}
inline ::google::protobuf::int64 MsgItem::sender() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.sender)
  return sender_;
}
inline void MsgItem::set_sender(::google::protobuf::int64 value) {
  set_has_sender();
  sender_ = value;
  // @@protoc_insertion_point(field_set:real.MsgItem.sender)
}

// optional int64 receiver = 5;
inline bool MsgItem::has_receiver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgItem::set_has_receiver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgItem::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgItem::clear_receiver() {
  receiver_ = GOOGLE_LONGLONG(0);
  clear_has_receiver();
}
inline ::google::protobuf::int64 MsgItem::receiver() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.receiver)
  return receiver_;
}
inline void MsgItem::set_receiver(::google::protobuf::int64 value) {
  set_has_receiver();
  receiver_ = value;
  // @@protoc_insertion_point(field_set:real.MsgItem.receiver)
}

// optional int64 time = 6;
inline bool MsgItem::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MsgItem::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MsgItem::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MsgItem::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 MsgItem::time() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.time)
  return time_;
}
inline void MsgItem::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:real.MsgItem.time)
}

// optional int32 delay = 7;
inline bool MsgItem::has_delay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MsgItem::set_has_delay() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MsgItem::clear_has_delay() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MsgItem::clear_delay() {
  delay_ = 0;
  clear_has_delay();
}
inline ::google::protobuf::int32 MsgItem::delay() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.delay)
  return delay_;
}
inline void MsgItem::set_delay(::google::protobuf::int32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:real.MsgItem.delay)
}

// optional bytes content = 8;
inline bool MsgItem::has_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MsgItem::set_has_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MsgItem::clear_has_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MsgItem::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& MsgItem::content() const {
  // @@protoc_insertion_point(field_get:real.MsgItem.content)
  return *content_;
}
inline void MsgItem::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:real.MsgItem.content)
}
inline void MsgItem::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:real.MsgItem.content)
}
inline void MsgItem::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:real.MsgItem.content)
}
inline ::std::string* MsgItem::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:real.MsgItem.content)
  return content_;
}
inline ::std::string* MsgItem::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MsgItem::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:real.MsgItem.content)
}

// -------------------------------------------------------------------

// MsgItems

// repeated .real.MsgItem items = 1;
inline int MsgItems::items_size() const {
  return items_.size();
}
inline void MsgItems::clear_items() {
  items_.Clear();
}
inline const ::real::MsgItem& MsgItems::items(int index) const {
  // @@protoc_insertion_point(field_get:real.MsgItems.items)
  return items_.Get(index);
}
inline ::real::MsgItem* MsgItems::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:real.MsgItems.items)
  return items_.Mutable(index);
}
inline ::real::MsgItem* MsgItems::add_items() {
  // @@protoc_insertion_point(field_add:real.MsgItems.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::real::MsgItem >&
MsgItems::items() const {
  // @@protoc_insertion_point(field_list:real.MsgItems.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::real::MsgItem >*
MsgItems::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:real.MsgItems.items)
  return &items_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace real

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::real::MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::real::MsgType>() {
  return ::real::MsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Server_2eproto__INCLUDED
